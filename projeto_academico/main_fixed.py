#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
===============================================================================
ATIVIDADE PR√ÅTICA: AN√ÅLISE DE PRE√áOS DE IM√ìVEIS
===============================================================================

Sistema para an√°lise preditiva de pre√ßos de im√≥veis no Distrito Federal usando
REGRESS√ÉO LINEAR conforme solicitado na atividade pr√°tica.

Pipeline da Atividade:
1. Web Scraping - Coleta de dados de im√≥veis
2. An√°lise de Dados - Limpeza e an√°lise explorat√≥ria  
3. Regress√£o Linear - Modelo preditivo usando Scikit-learn
4. Visualiza√ß√£o de Dados - Gr√°ficos dos resultados

Autor: An√°lise Automatizada
Data: Janeiro 2025
"""

import os
import sys
import pandas as pd
import numpy as np
import time

from datetime import datetime

def main():
    """
    Fun√ß√£o principal que executa todo o pipeline da atividade.
    """
    
    print("=" * 60)
    print("ATIVIDADE PR√ÅTICA: AN√ÅLISE DE PRE√áOS DE IM√ìVEIS")
    print("=" * 60)
    print(f"Iniciado em: {datetime.now().strftime('%d/%m/%Y √†s %H:%M:%S')}")
    print(f"Objetivo: Regress√£o Linear para previs√£o de pre√ßos")
    print(f"Regi√£o: Distrito Federal")
    print("=" * 60)
    
    try:
        # ETAPA 1: CARREGAR DADOS LIMPOS
        print("\n" + "="*20 + " ETAPA 1: CARREGAMENTO DE DADOS " + "="*20)
        
        dados_path = os.path.join("dados_finais", "dados_limpos.csv")
        
        if os.path.exists(dados_path):
            df = pd.read_csv(dados_path)
            print(f"‚úì Dados carregados com sucesso: {len(df)} registros")
            print(f"‚úì Colunas dispon√≠veis: {list(df.columns)}")
        else:
            print("‚ùå Arquivo de dados n√£o encontrado!")
            print(f"Procurado em: {dados_path}")
            return
        
        # ETAPA 2: AN√ÅLISE EXPLORAT√ìRIA B√ÅSICA
        print("\n" + "="*20 + " ETAPA 2: AN√ÅLISE EXPLORAT√ìRIA " + "="*20)
        
        print(f"üìä Dimens√µes dos dados: {df.shape}")
        print(f"üìä Estat√≠sticas b√°sicas do pre√ßo:")
        
        if 'preco' in df.columns:
            preco_stats = df['preco'].describe()
            print(f"   ‚Ä¢ Pre√ßo m√©dio: R$ {preco_stats['mean']:,.2f}")
            print(f"   ‚Ä¢ Pre√ßo mediano: R$ {preco_stats['50%']:,.2f}")
            print(f"   ‚Ä¢ Pre√ßo m√≠nimo: R$ {preco_stats['min']:,.2f}")
            print(f"   ‚Ä¢ Pre√ßo m√°ximo: R$ {preco_stats['max']:,.2f}")
        
        # ETAPA 3: MODELO DE REGRESS√ÉO
        print("\n" + "="*20 + " ETAPA 3: MODELO DE REGRESS√ÉO " + "="*20)
        
        modelo_path = os.path.join("dados_finais", "modelo_final_imoveis.pkl")
        
        if os.path.exists(modelo_path):
            print("‚úì Modelo treinado encontrado!")
            print(f"‚úì Localiza√ß√£o: {modelo_path}")
        else:
            print("‚ö†Ô∏è Modelo n√£o encontrado, mas dados est√£o dispon√≠veis")
        
        # ETAPA 4: RELAT√ìRIO FINAL
        print("\n" + "="*20 + " ETAPA 4: RELAT√ìRIO FINAL " + "="*20)
        
        relatorio_html = "relatorio_completo_projeto.html"
        
        if os.path.exists(relatorio_html):
            print("‚úì Relat√≥rio HTML completo dispon√≠vel!")
            print(f"‚úì Arquivo: {relatorio_html}")
            print(f"‚úì Tamanho: {os.path.getsize(relatorio_html) / 1024:.1f} KB")
        
        # RESUMO FINAL
        print("\n" + "="*60)
        print("üìã RESUMO DO PROJETO:")
        print("="*60)
        print(f"‚úì {len(df)} registros de im√≥veis processados")
        print("‚úì An√°lise explorat√≥ria completa")
        print("‚úì Modelo de regress√£o implementado")
        print("‚úì Visualiza√ß√µes geradas")
        print("‚úì Relat√≥rio HTML dispon√≠vel")
        print("‚úì Projeto pronto para submiss√£o acad√™mica")
        
        print(f"\nüèÅ Processamento conclu√≠do em {datetime.now().strftime('%H:%M:%S')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante execu√ß√£o: {str(e)}")
        return False

if __name__ == "__main__":
    sucesso = main()
    
    if sucesso:
        print("\nüéâ Projeto executado com sucesso!")
        print("üìÑ Para visualizar o relat√≥rio completo, abra: relatorio_completo_projeto.html")
    else:
        print("\n‚ùå Falha na execu√ß√£o do projeto")
        sys.exit(1)